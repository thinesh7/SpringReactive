package com.bms.handler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.server.ServerRequest;
import org.springframework.web.reactive.function.server.ServerResponse;
import com.bms.dto.CustomerDTO;
import com.bms.repository.CustomerRepository;
import com.bms.util.AppUtils;
import reactor.core.publisher.Mono;

@Service
public class BMSHandler {

	@Autowired
	private CustomerRepository custRepo;

	public Mono<ServerResponse> createACustomer(ServerRequest request) {

		Mono<Object> result = request.bodyToMono(CustomerDTO.class)
				.flatMap(i -> custRepo.checkCustomerAlreadyExist(i.getCustomerSSNID(), i.getCustomerMobileNumber()))
				.flatMap(i -> Mono.error(new Exception("Already Exist da..!"))).doOnSuccess(i -> {
					request.bodyToMono(CustomerDTO.class).flatMap(cust -> {
						System.out.println("In");
						return custRepo.save(AppUtils.convertCustomerDTOtoCustomerEntity(cust));
					}).subscribe();
				}).flatMap(i -> request.bodyToMono(CustomerDTO.class));

		return ServerResponse.ok().contentType(MediaType.TEXT_EVENT_STREAM).body(result, Object.class);
	}
}
